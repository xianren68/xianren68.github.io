import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.C62L6tH-.js";const _=JSON.parse('{"title":"如何理解类型声明","description":"","frontmatter":{},"headers":[],"relativePath":"c/index.md","filePath":"c/index.md"}'),n={name:"c/index.md"},e=t(`<h1 id="如何理解类型声明" tabindex="-1">如何理解类型声明 <a class="header-anchor" href="#如何理解类型声明" aria-label="Permalink to &quot;如何理解类型声明&quot;">​</a></h1><blockquote><p>在c中，在声明变量时的类型，用于指定变量的存储空间大小和数据类型。但是如果声明比较长，可读性就十分差，尤其是入门时学习其他语言的人来说，可能会感到困惑。</p></blockquote><blockquote><p>我们可以这么理解类型声明，在最前方的类型后面的部分可以看作一个表达式，表达式求值后得到前面的类型，如下：</p></blockquote><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><blockquote><p>看一下上方的代码， 第一行，后面的表达式是对a解引用，然后得到前面的类型，即int。所以a是一个指向int的指针。 第二行，b通过索引语法得到int。所以b是一个int数组。 第三行，后面的表达式是对c解引用后再通过索引语法得到int。所以c是一个指向int数组的指针。</p></blockquote>`,5),h=[e];function l(p,k,c,o,d,r){return a(),i("div",null,h)}const g=s(n,[["render",l]]);export{_ as __pageData,g as default};
