import{_ as s,c as a,o as i,a2 as n}from"./chunks/framework.C62L6tH-.js";const c=JSON.parse('{"title":"02_go程序是如何编译的","description":"","frontmatter":{},"headers":[],"relativePath":"go/thorough/markdown/02.md","filePath":"go/thorough/markdown/02.md"}'),l={name:"go/thorough/markdown/02.md"},e=n(`<h1 id="_02-go程序是如何编译的" tabindex="-1">02_go程序是如何编译的 <a class="header-anchor" href="#_02-go程序是如何编译的" aria-label="Permalink to &quot;02_go程序是如何编译的&quot;">​</a></h1><p><code>go build -n</code> 生成打包过程,不生成打包结果</p><p>简单例子</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-t8nAN" id="tab-Xus_L4o" checked="checked"><label for="tab-Xus_L4o">hello, world</label></div><div class="blocks"><div class="language-go vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello, world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>打包过程</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># go_test // 包名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mkdir -p $WORK\\b001\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat &gt;$WORK\\b001\\importcfg &lt;&lt; &#39;EOF&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # internal</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># import config  // 导入编译成机器码的包</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile fmt=D:\\Go\\pkg\\windows_amd64\\fmt.a  // fmt</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile runtime=D:\\Go\\pkg\\windows_amd64\\runtime.a // runtime</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd D:\\练习\\go_test // 程序路径</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windows_amd64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">compile.exe&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -o &quot;$WORK\\\\b001\\\\_pkg_.a&quot; -trimpath &quot;$WORK\\\\b001=&gt;&quot; -p main -lang=go1.19 -complete -buildid ZWvL5KT4DxecKG5-PS90/ZWvL5KT4DxecKG5-PS90 -goversion go1.19.4 -c=4 -nolocalimports -importcfg &quot;$WORK\\\\b001\\\\importcfg&quot; -pack &quot;D:\\\\练习\\\\go_test\\\\main.go&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windows_amd64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">buildid.exe&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -w &quot;$WORK\\\\b001\\\\_pkg_.a&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # internal</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cat &gt;$WORK\\b001\\importcfg.link &lt;&lt; &#39;EOF&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # internal</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile go_test=$WORK\\b001\\_pkg_.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile fmt=D:\\Go\\pkg\\windows_amd64\\fmt.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile runtime=D:\\Go\\pkg\\windows_amd64\\runtime.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile errors=D:\\Go\\pkg\\windows_amd64\\errors.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/fmtsort=D:\\Go\\pkg\\windows_amd64\\internal\\fmtsort.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile io=D:\\Go\\pkg\\windows_amd64\\io.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile math=D:\\Go\\pkg\\windows_amd64\\math.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile os=D:\\Go\\pkg\\windows_amd64\\os.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile reflect=D:\\Go\\pkg\\windows_amd64\\reflect.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile strconv=D:\\Go\\pkg\\windows_amd64\\strconv.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile sync=D:\\Go\\pkg\\windows_amd64\\sync.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile unicode/utf8=D:\\Go\\pkg\\windows_amd64\\unicode\\utf8.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/abi=D:\\Go\\pkg\\windows_amd64\\internal\\abi.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/bytealg=D:\\Go\\pkg\\windows_amd64\\internal\\bytealg.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/cpu=D:\\Go\\pkg\\windows_amd64\\internal\\cpu.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/goarch=D:\\Go\\pkg\\windows_amd64\\internal\\goarch.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/goexperiment=D:\\Go\\pkg\\windows_amd64\\internal\\goexperiment.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/goos=D:\\Go\\pkg\\windows_amd64\\internal\\goos.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile runtime/internal/atomic=D:\\Go\\pkg\\windows_amd64\\runtime\\internal\\atomic.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile runtime/internal/math=D:\\Go\\pkg\\windows_amd64\\runtime\\internal\\math.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile runtime/internal/sys=D:\\Go\\pkg\\windows_amd64\\runtime\\internal\\sys.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/reflectlite=D:\\Go\\pkg\\windows_amd64\\internal\\reflectlite.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile sort=D:\\Go\\pkg\\windows_amd64\\sort.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile math/bits=D:\\Go\\pkg\\windows_amd64\\math\\bits.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/itoa=D:\\Go\\pkg\\windows_amd64\\internal\\itoa.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/oserror=D:\\Go\\pkg\\windows_amd64\\internal\\oserror.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/poll=D:\\Go\\pkg\\windows_amd64\\internal\\poll.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/safefilepath=D:\\Go\\pkg\\windows_amd64\\internal\\safefilepath.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/syscall/execenv=D:\\Go\\pkg\\windows_amd64\\internal\\syscall\\execenv.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/syscall/windows=D:\\Go\\pkg\\windows_amd64\\internal\\syscall\\windows.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/testlog=D:\\Go\\pkg\\windows_amd64\\internal\\testlog.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/unsafeheader=D:\\Go\\pkg\\windows_amd64\\internal\\unsafeheader.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile io/fs=D:\\Go\\pkg\\windows_amd64\\io\\fs.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile sync/atomic=D:\\Go\\pkg\\windows_amd64\\sync\\atomic.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile syscall=D:\\Go\\pkg\\windows_amd64\\syscall.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile time=D:\\Go\\pkg\\windows_amd64\\time.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile unicode/utf16=D:\\Go\\pkg\\windows_amd64\\unicode\\utf16.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile unicode=D:\\Go\\pkg\\windows_amd64\\unicode.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/race=D:\\Go\\pkg\\windows_amd64\\internal\\race.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/syscall/windows/sysdll=D:\\Go\\pkg\\windows_amd64\\internal\\syscall\\windows\\sysdll.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile path=D:\\Go\\pkg\\windows_amd64\\path.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packagefile internal/syscall/windows/registry=D:\\Go\\pkg\\windows_amd64\\internal\\syscall\\windows\\registry.a</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">modinfo &quot;0w\\xaf\\f\\x92t\\b\\x02A\\xe1\\xc1\\a\\xe6\\xd6\\x18\\xe6path\\tgo_test\\nmod\\tgo_test\\t(devel)\\t\\nbuild\\t-compiler=gc\\nbuild\\tCGO_ENABLED=1\\nbuild\\tCGO_CFLAGS=\\nbuild\\tCGO_CPPFLAGS=\\nbuild\\tCGO_CXXFLAGS=\\nbuild\\tCGO_LDFLAGS=\\nbuild\\tGOARCH=amd64\\nbuild\\tGOOS=windows\\nbuild\\tGOAMD64=v1\\n\\xf92C1\\x86\\x18 r\\x00\\x82B\\x10A\\x16\\xd8\\xf2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mkdir -p $WORK\\b001\\exe\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cd .</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windows_amd64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">link.exe&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -o &quot;$WORK\\\\b001\\\\exe\\\\a.out.exe&quot; -importcfg &quot;$WORK\\\\b001\\\\importcfg.link&quot; -buildmode=pie -buildid=Otehr3hOWJzziVFTkXLo/ZWvL5KT4DxecKG5-PS90/ZWvL5KT4DxecKG5-PS90/Otehr3hOWJzziVFTkXLo -extld=gcc &quot;$WORK\\\\b001\\\\_pkg_.a&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">windows_amd64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">buildid.exe&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -w &quot;$WORK\\\\b001\\\\exe\\\\a.out.exe&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # internal</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mv $WORK\\b001\\exe\\a.out.exe go_test.exe // 编译结果</span></span></code></pre></div><h2 id="编译过程" tabindex="-1">编译过程 <a class="header-anchor" href="#编译过程" aria-label="Permalink to &quot;编译过程&quot;">​</a></h2><h3 id="_1-词法分析" tabindex="-1">1. 词法分析 <a class="header-anchor" href="#_1-词法分析" aria-label="Permalink to &quot;1. 词法分析&quot;">​</a></h3><p>将源代码解析为token,token即是代码中不可再分的最小的语义单位</p><h3 id="_2-句法分析" tabindex="-1">2. 句法分析 <a class="header-anchor" href="#_2-句法分析" aria-label="Permalink to &quot;2. 句法分析&quot;">​</a></h3><p>将token解析为抽象语法树(<code>AST</code>)</p><h3 id="_3-语义分析" tabindex="-1">3. 语义分析 <a class="header-anchor" href="#_3-语义分析" aria-label="Permalink to &quot;3. 语义分析&quot;">​</a></h3><ol><li>类型检查</li><li>类型推断</li><li>查看类型是否匹配</li><li>函数调用内联优化</li><li>逃逸分析</li></ol><h3 id="_4-中间码生成" tabindex="-1">4. 中间码生成 <a class="header-anchor" href="#_4-中间码生成" aria-label="Permalink to &quot;4. 中间码生成&quot;">​</a></h3><p>为处理不同平台差异生成的中间代码(<code>SSA</code>),是与平台无关的汇编</p><h4 id="查看中间码的生成过程" tabindex="-1">查看中间码的生成过程 <a class="header-anchor" href="#查看中间码的生成过程" aria-label="Permalink to &quot;查看中间码的生成过程&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$env:GOSSAFUNC=&quot;main&quot; // 设置环境变量(powershell为例),指定要查看的函数名</span></span></code></pre></div><p>然后<code>go build</code>编译，可以看到生成的<code>ssa.html</code>文件,它就是生成中间码的过程</p><h3 id="_5-机器码生成" tabindex="-1">5. 机器码生成 <a class="header-anchor" href="#_5-机器码生成" aria-label="Permalink to &quot;5. 机器码生成&quot;">​</a></h3><ol><li>生成plan9汇编</li><li>将汇编转化成机器码,<code>.a</code>文件</li></ol><h4 id="查看生成的plan9汇编" tabindex="-1">查看生成的plan9汇编 <a class="header-anchor" href="#查看生成的plan9汇编" aria-label="Permalink to &quot;查看生成的plan9汇编&quot;">​</a></h4><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">go build -gcflags -S</span></span></code></pre></div><h3 id="_6-链接" tabindex="-1">6. 链接 <a class="header-anchor" href="#_6-链接" aria-label="Permalink to &quot;6. 链接&quot;">​</a></h3><p>将所有的.a文件链接成一个可执行文件</p>`,24),t=[e];function p(k,h,d,o,r,F){return i(),a("div",null,t)}const y=s(l,[["render",p]]);export{c as __pageData,y as default};
